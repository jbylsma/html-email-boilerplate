#!/bin/bash
#
# TODO: Improve function names.
# TODO: Echo to make things friendly.
set -e

readonly IMAGE_DIR="images"
readonly PACKAGE_FILE="$(basename "$(pwd)").zip"

###############################################################################
#
###############################################################################
usage() {
  echo "Usage: $(basename "$0") [-b <baseurl>][-p] filename" >&2
}

###############################################################################
# Strip out inline styles with "-premailer" prefix.
#
# As of premailer 1.8.2, inline styles prefixed with "-premailer" are
# not removed.
# Issue: https://github.com/premailer/premailer/issues/173
###############################################################################
strip_premailer_prefixed_styles() {
  sed -E 's/[[:space:]]*-premailer-[a-zA-Z]+:[^;]+;[[:space:]]*//g'
}


###############################################################################
#
###############################################################################
main() {
  local baseurl
  local baseurl_opt
  local create_package
  local email_file
  local email_rendered_file
  local output

  baseurl=''
  create_package=''

  while getopts ':hpb:' opt; do
    case "${opt}" in
      h)
        usage
        exit
        ;;
      b)
        baseurl="${OPTARG}"
        ;;
      p)
        create_package=true
        ;;
      \?)
        echo "Invalid option: -${OPTARG}" >&2
        exit 1
        ;;
      :)
        usage
        exit 1
        ;;
    esac
  done
  shift $((OPTIND-1))

  baseurl_opt=''
  email_file="$1"
  email_rendered_file="rendered--${email_file}"

  if [[ $# != 1 ]]; then
    usage
    exit 1
  fi

  if [[ ! -f "${email_file}" ]]; then
    echo "${email_file} not found, exiting." >&2
    exit 1
  fi

  # If the BASEURL_FILE exists, use it as a premailer argument.
  if [[ -n "${baseurl}" ]]; then
    baseurl="$(echo "${baseurl}" | sed 's|/$||g')"
    baseurl_opt="--base-url ${baseurl}"
  fi

  # Run premailer
  # TODO check if premailer returned an error code?
  output="$(premailer \
    --remove-classes \
    --remove-scripts \
    --io-exceptions \
    ${baseurl_opt} \
    "${email_file}" | \
    strip_premailer_prefixed_styles)"

  # If there is a baseurl, replace any image directory link with the base url.
  if [[ -n "${baseurl}" && -d "./${IMAGE_DIR}" ]]; then
    output=$(echo "${output}" | sed "s|${baseurl}/${IMAGE_DIR}/|${baseurl}/|g")
  fi

  # Package up
  if [[ "${create_package}" == true ]]
  then
    output="$(echo "${output}" | sed "s|\(src=\"\)${IMAGE_DIR}/|\1|g")"
    echo "${output}" > "${email_rendered_file}"

    if [[ -f "${PACKAGE_FILE}" ]]; then
      rm "${PACKAGE_FILE}"
    fi

    # TODO: Images directory could be empty!
    zip -j "${PACKAGE_FILE}" "${email_rendered_file}" "./${IMAGE_DIR}"/*
    rm "${email_rendered_file}"
  else
    echo "${output}"
  fi
}
main "$@"
